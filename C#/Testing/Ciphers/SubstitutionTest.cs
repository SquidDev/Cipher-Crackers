using Cipher.Ciphers;
using Cipher.Text;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace Testing.Ciphers
{
    [TestClass]
    public class SubstitutionTest
    {
        // Taken from 2013 National Cipher Challenge
        string Encoded = "SYIEZLKKZRIVPYIMPQVZFSLMLCKILVWMPFUBIVSZPYHLZEPMLEVULERLMOQPPYIHKFGIMMFKYICHIVDIITHCLZEPFVLEZICPYLPPYIGFKNIKZIMSFQCVOIJQZUBCWVIPIUPIVZGSIQMIVPYIDMYISLMHLZEPIVFELHFHCLKOFLKVKLPYIKPYLELMPKIPUYIVULERLMLEVPYIHZNDIEPMQMIVOWPYIDLMPIKSIKIRIKWVZGGIKIEPGKFDPYIFEIMSIQMIPFVLWEFSPYIWOKZENDIPYIHZNDIEPMZLMBGFKMFGPUYLCBWOCFFVKIVMLENQZEILEVDQMPLKVWICCFSFUYKIMGKFDPYIMFZCMFGZPLCWZDZTPYIDSZPYCZEMIIVFZCOFZCIVLEVLNIVZELBIPPCIHKFHIKCWHKIHLKIVPYIMIHLZEPMLKIZEVZMPZENQZMYLOCIGKFDPYIFEIMQMIVFEPYIFKZNZELCLEVPYIUFHWZMDFKICZBICWPFOIOIPKLWIVOWLULKICIMMOKQMYMPKFBIFKLDZMHCLUIVYZNYCZNYPPYIHKFGIMMFKMIIMJQZUBCWSYIEDWPZKIVIWIMYLRIDZMMIVLPFEILEVZYLRIDLVIIEFQNYVICZOIKLPIDZMPLBIMPFUFERZEUIPYIDPFDFRIDWMPQVZFPFPYILPPZUSYIKIPYICZNYPZMOIPPIKGKFDPYIKIZYLRILRZISFGPYIUZPWLEVLKIDZEVIKFGGKIIVFDPYIWMPZCCZEMZMPPYLPZMCIIHYIKIZEPYIUICCLKOQPPYLPNZRIMDILEFPYIKGKIIVFDPYIGCZUBIKZENULEVCIMULMPVIIHMYLVFSMSYZUYYZVIDWFPYIKSFKBZGZULEEFPOIGKIIHIKYLHMMYIULE";
        string Plain = "WHENIARRIVEDTHESTUDIOWASALREADYSTOCKEDWITHPAINTSANDCANVASBUTTHEPROFESSORHELPEDMEEXPLAINTODANIELTHATTHEFORGERIESWOULDBEQUICKLYDETECTEDIFWEUSEDTHEMSHEWASPAINTEDONAPOPLARBOARDRATHERTHANASTRETCHEDCANVASANDTHEPIGMENTSUSEDBYTHEMASTERWEREVERYDIFFERENTFROMTHEONESWEUSETODAYNOWTHEYBRINGMETHEPIGMENTSIASKFORSOFTCHALKYBLOODREDSANGUINEANDMUSTARDYELLOWOCHRESFROMTHESOILSOFITALYIMIXTHEMWITHLINSEEDOILBOILEDANDAGEDINAKETTLEPROPERLYPREPAREDTHESEPAINTSAREINDISTINGUISHABLEFROMTHEONESUSEDONTHEORIGINALANDTHECOPYISMORELIKELYTOBEBETRAYEDBYACARELESSBRUSHSTROKEORAMISPLACEDHIGHLIGHTTHEPROFESSORSEESQUICKLYWHENMYTIREDEYESHAVEMISSEDATONEANDIHAVEMADEENOUGHDELIBERATEMISTAKESTOCONVINCETHEMTOMOVEMYSTUDIOTOTHEATTICWHERETHELIGHTISBETTERFROMTHEREIHAVEAVIEWOFTHECITYANDAREMINDEROFFREEDOMTHEYSTILLINSISTTHATISLEEPHEREINTHECELLARBUTTHATGIVESMEANOTHERFREEDOMTHEFLICKERINGCANDLESCASTDEEPSHADOWSWHICHHIDEMYOTHERWORKIFICANNOTBEFREEPERHAPSSHECAN";
        string Key = "ZKLMNOFPEQRASGBTUVWXCDYJHI";
        string OtherKey = "JKLMNOFPEQRASGBTUVWXCDYZHI";

        /// <summary>
        /// Tests the crack method
        /// </summary>
        [TestMethod]
        public void SubstitutionCrack()
        {
            Substitution<QuadgramScoredLetterArray> Shift = new Substitution<QuadgramScoredLetterArray>(Encoded);
            Substitution<QuadgramScoredLetterArray>.CipherResult Result = Shift.Crack();

            Assert.AreEqual<string>(Plain, Result.Text.ToString());

            string ThisKey = Result.Key.ToString();
            if(ThisKey != Key && ThisKey != OtherKey)
            {
                Assert.Fail("Key failed\nExpected: ({0} or {1})\nActual: {0}", Key, OtherKey, ThisKey);
            }
            
        }

        /// <summary>
        /// Tests the decode method
        /// </summary>
        [TestMethod]
        public void SubstitutionDecode()
        {
            Substitution<LetterArray> Shift = new Substitution<LetterArray>(Encoded);
            LetterArray Result = Shift.Decode(new QuadgramScoredLetterArray(Key));

            Assert.AreEqual(Plain, Result.ToString());
        }
    }
}
